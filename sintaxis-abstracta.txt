Programa -> program types DecTipos variables DecVariables subprograms DecSubprogramas IBloque 

Tipo -> int | double | boolean | id | array Tipo[numeroNatural] | struct { DecTipos } | pointer Tipo 

DecTipos -> DecTipos ; id : Tipo  | id : Tipo 
DecVariables -> DecVariables ; id : Tipo | id : Tipo 
DecSubprogramas -> 
	DecSubprogramas ; subprogram id Parametros types DecTipos variables DecVariables subprograms DecSubprogramas IBloque | 
	subprogram id Parametros types DecTipos variables DecVariables subprograms DecSubprogramas IBloque  
 
Parametros -> ( ListaParametros ) | ( ) 
ListaParametros -> ListaParametros , Parametro | Parametro
Parametro -> id : Tipo | & id: Tipo

Instruccion -> IAsig | IBloque | ICond | IBucle | ILlamada | IRead | IWrite | INew | IDelete
Instrucciones -> Instrucciones ; Instruccion | Instruccion
 
IAsig -> Designador = Exp
IBloque -> { Instrucciones } | {} 
ICond -> if Casos endif 
Casos -> Casos [] Exp : IBloque | Exp : IBloque 
IBucle -> do Casos enddo 
ILlamada -> id ( ListaArgumentos ) | id ( ) 
ListaArgumentos -> ListaArgumentos , Exp | Exp 
IRead -> read Designador 
IWrite -> write Exp
INew -> new Designador 
IDelete -> delete Designador 

Designador -> id | Designador[Exp] | Designador.id

Exp

OpBinario -> == | != | < | > | <= | >= | * | / | % | and | + | - | or 
OpUnario -> - | not | toint | todouble 
