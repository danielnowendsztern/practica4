Programa -> program types DecTipos variables DecVariables subprograms DecSubprogramas IBloque 

DecTipos -> DecTipos ; DecTipo | DecTipo 
DecTipo -> id : Tipo 
Tipo -> int | double | boolean | id | array Tipo[numeroNatural] | struct {Campos} | pointer Tipo 
Campos -> Campos ; Campo | Campo 
Campo -> id : Tipo

DecVariables -> DecVariables ; DecVariable | DecVariable 
DecVariable -> id : Tipo 

DecSubprogramas -> DecSubprogramas ; DecSubprograma | DecSubprograma 
DecSubprograma -> subprogram id Parametros SeccionTipos SeccionVariables SeccionSubprogramas IBloque 
 
Parametros -> ( ListaParametros ) | ( ) 
ListaParametros -> ListaParametros , Parametro | Parametro 
Parametro -> id : Tipo | & id: Tipo

Instruccion -> IAsig | IBloque | ICond | IBucle | ILlamada | IRead | IWrite | INew | IDelete
 
IAsig -> Designador = Exp
IBloque -> {Instrucciones} | {} 
Instrucciones -> Instrucciones ; Instruccion | Instruccion

ICond -> if Casos endif 
Casos -> Casos [] Exp : IBloque | Exp : IBloque 

IBucle -> do Casos enddo 
ILlamada -> id Argumentos
Argumentos -> ( ListaArgumentos ) | ( ) 
ListaArgumentos -> ListaArgumentos , Exp | Exp 

IRead -> read Designador 
IWrite -> write Exp0
INew -> new Designador 
IDelete -> delete Designador 

Designador -> id | Designador[Exp] | Designador.id

Exp -> Exp OpBinario Exp | OpUnario Exp | true | false | numeroNatural | numeroReal | Designador | (Exp)

OpBinario -> == | != | < | > | <= | >= | * | / | % | and | + | - | or 
OpUnario -> - | not | toint | todouble 
